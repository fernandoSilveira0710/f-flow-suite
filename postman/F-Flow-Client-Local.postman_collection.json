{
  "info": {
    "_postman_id": "f6d9b5b0-0000-0000-0000-000000000002",
    "name": "F-Flow Client Local API",
    "description": "Coleção para validar o Client Local com endpoints de Services e Professionals.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{client_local_url}}/health",
          "host": [
            "{{client_local_url}}"
          ],
          "path": [
            "health"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Retorna status ok', function () {",
              "  const body = pm.response.json();",
              "  pm.expect(body.status).to.eql('ok');",
              "  pm.expect(body.service).to.eql('f-flow-client-local');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "List Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de services', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Banho e Tosa\",\n  \"description\": \"Serviço completo de banho e tosa para cães\",\n  \"price\": 50.00,\n  \"duration\": 120,\n  \"category\": \"grooming\",\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/services",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna service criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('price');",
                  "  pm.environment.set('service_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Service by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna service', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('price');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Service",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Banho e Tosa Premium\",\n  \"price\": 75.00\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna service atualizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.name).to.include('Premium');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Service",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Professionals",
      "item": [
        {
          "name": "List Professionals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de professionals', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Professional",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. João Silva\",\n  \"email\": \"joao.silva@email.com\",\n  \"phone\": \"(11) 99999-9999\",\n  \"document\": \"123.456.789-00\",\n  \"specialty\": \"Veterinário\",\n  \"services\": [\"consulta\", \"cirurgia\"],\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/professionals",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna professional criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('specialty');",
                  "  pm.environment.set('professional_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Professional by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna professional', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('specialty');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Professional",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. João Silva Santos\",\n  \"specialty\": \"Veterinário Especialista\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna professional atualizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.specialty).to.include('Especialista');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Professional",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Sync",
      "item": [
        {
          "name": "Get Outbox Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/events",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "events"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna eventos de sincronização', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('events');",
                  "  pm.expect(body.events).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Push Pending Events",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/push/pending",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "push",
                "pending"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna resultado do push', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('accepted');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Sync",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/test",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "test"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna resultado do teste de sync', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('push');",
                  "  pm.expect(body).to.have.property('pull');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "List Appointments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/appointments",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "appointments"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de appointments', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"petId\": \"{{pet_id}}\",\n  \"professionalId\": \"{{professional_id}}\",\n  \"serviceId\": \"{{service_id}}\",\n  \"scheduledAt\": \"2024-12-31T10:00:00.000Z\",\n  \"notes\": \"Consulta de rotina\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/appointments",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "appointments"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna appointment criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('petId');",
                  "  pm.expect(body).to.have.property('professionalId');",
                  "  pm.expect(body).to.have.property('serviceId');",
                  "  pm.expect(body).to.have.property('scheduledAt');",
                  "  pm.collectionVariables.set('appointment_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Appointment",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/appointments/{{appointment_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "appointments",
                "{{appointment_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna appointment específico', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.id).to.eql(pm.collectionVariables.get('appointment_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Appointment",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scheduledAt\": \"2024-12-31T14:00:00.000Z\",\n  \"notes\": \"Consulta reagendada\",\n  \"status\": \"CONFIRMED\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/appointments/{{appointment_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "appointments",
                "{{appointment_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna appointment atualizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.status).to.eql('CONFIRMED');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Appointment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/appointments/{{appointment_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "appointments",
                "{{appointment_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Check-Ins",
      "item": [
        {
          "name": "List Check-Ins",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/checkins",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "checkins"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de check-ins', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check-In Pet",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"petId\": \"{{pet_id}}\",\n  \"professionalId\": \"{{professional_id}}\",\n  \"notes\": \"Pet chegou para consulta\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/checkins",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "checkins"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna check-in criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('petId');",
                  "  pm.expect(body).to.have.property('professionalId');",
                  "  pm.expect(body).to.have.property('checkInAt');",
                  "  pm.expect(body.checkOutAt).to.be.null;",
                  "  pm.collectionVariables.set('checkin_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Check-In",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/checkins/{{checkin_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "checkins",
                "{{checkin_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna check-in específico', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.id).to.eql(pm.collectionVariables.get('checkin_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check-Out Pet",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Pet saiu após consulta\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/checkins/{{checkin_id}}/checkout",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "checkins",
                "{{checkin_id}}",
                "checkout"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna check-out realizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('checkOutAt');",
                  "  pm.expect(body.checkOutAt).to.not.be.null;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Active Check-In by Pet",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/checkins/active/{{pet_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "checkins",
                "active",
                "{{pet_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 ou 404', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "  pm.test('Retorna check-in ativo', function () {",
                  "    const body = pm.response.json();",
                  "    pm.expect(body).to.have.property('id');",
                  "    pm.expect(body).to.have.property('petId');",
                  "    pm.expect(body.checkOutAt).to.be.null;",
                  "  });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Dashboard Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/dashboard/summary",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "dashboard",
                "summary"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna métricas do dashboard', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('vendas');",
                  "  pm.expect(body).to.have.property('estoque');",
                  "  pm.expect(body).to.have.property('agendamentos');",
                  "  pm.expect(body).to.have.property('grooming');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Feature Flags",
      "item": [
        {
          "name": "Get All Feature Flags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/feature-flags",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "feature-flags"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna feature flags', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('mvpPosEnabled');",
                  "  pm.expect(body).to.have.property('mvpGroomingEnabled');",
                  "  pm.expect(body).to.have.property('mvpAppointmentsEnabled');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check POS Feature",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/feature-flags/pos",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "feature-flags",
                "pos"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna status da feature', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('enabled');",
                  "  pm.expect(body.enabled).to.be.a('boolean');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Grooming Feature",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/feature-flags/grooming",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "feature-flags",
                "grooming"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna status da feature', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('enabled');",
                  "  pm.expect(body.enabled).to.be.a('boolean');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}