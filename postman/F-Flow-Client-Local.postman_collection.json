{
  "info": {
    "_postman_id": "f6d9b5b0-0000-0000-0000-000000000002",
    "name": "F-Flow Client Local API",
    "description": "Coleção para validar o Client Local com endpoints de Services e Professionals.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{client_local_url}}/health",
          "host": [
            "{{client_local_url}}"
          ],
          "path": [
            "health"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Retorna status ok', function () {",
              "  const body = pm.response.json();",
              "  pm.expect(body.status).to.eql('ok');",
              "  pm.expect(body.service).to.eql('f-flow-client-local');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "List Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de services', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Banho e Tosa\",\n  \"description\": \"Serviço completo de banho e tosa para cães\",\n  \"price\": 50.00,\n  \"duration\": 120,\n  \"category\": \"grooming\",\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/services",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna service criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('price');",
                  "  pm.environment.set('service_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Service by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna service', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('price');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Service",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Banho e Tosa Premium\",\n  \"price\": 75.00\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna service atualizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.name).to.include('Premium');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Service",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/services/{{service_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "services",
                "{{service_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Professionals",
      "item": [
        {
          "name": "List Professionals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna lista de professionals', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Professional",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. João Silva\",\n  \"email\": \"joao.silva@email.com\",\n  \"phone\": \"(11) 99999-9999\",\n  \"document\": \"123.456.789-00\",\n  \"specialty\": \"Veterinário\",\n  \"services\": [\"consulta\", \"cirurgia\"],\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/professionals",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Retorna professional criado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('specialty');",
                  "  pm.environment.set('professional_id', body.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Professional by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna professional', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('specialty');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Professional",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. João Silva Santos\",\n  \"specialty\": \"Veterinário Especialista\"\n}"
            },
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna professional atualizado', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('id');",
                  "  pm.expect(body.specialty).to.include('Especialista');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Professional",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/professionals/{{professional_id}}",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "professionals",
                "{{professional_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Sync",
      "item": [
        {
          "name": "Get Outbox Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/events",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "events"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna eventos de sincronização', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('events');",
                  "  pm.expect(body.events).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Push Pending Events",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/push/pending",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "push",
                "pending"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna resultado do push', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('accepted');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Sync",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{client_local_url}}/sync/test",
              "host": [
                "{{client_local_url}}"
              ],
              "path": [
                "sync",
                "test"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Retorna resultado do teste de sync', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('push');",
                  "  pm.expect(body).to.have.property('pull');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}