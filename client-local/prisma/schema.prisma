generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Sale {
  id        String    @id @default(uuid())
  code      String    @unique
  operator  String
  payment   String
  status    String    @default("paid")
  total     Decimal   @default(0)
  createdAt DateTime  @default(now())
  items     SaleItem[]
}

model SaleItem {
  id        String   @id @default(uuid())
  saleId    String
  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
  productId String
  qty       Int
  unitPrice Decimal
  subtotal  Decimal
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Decimal
  stock       Int      @default(0)
  category    String?
  barcode     String?  @unique
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  stockMovements StockMovement[]
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String?  @unique
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
}

model Appointment {
  id          String   @id @default(uuid())
  customerId  String?
  customer    Customer? @relation(fields: [customerId], references: [id])
  serviceType String
  date        DateTime
  duration    Int      // in minutes
  status      String   @default("scheduled") // scheduled, confirmed, in_progress, completed, cancelled
  notes       String?
  price       Decimal?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StockMovement {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  type      String   // in, out, adjustment
  quantity  Int
  reason    String?
  createdAt DateTime @default(now())
}